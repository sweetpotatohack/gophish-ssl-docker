#!/bin/bash

# GoPhish SSL Certificate Manager v3.1
# –°–∫—Ä–∏–ø—Ç –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è SSL —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç–∞–º–∏ Let's Encrypt —Å Docker

set -e

# –ü—Ä–∞–≤–∏–ª—å–Ω—ã–π –ø–∞—Ä—Å–∏–Ω–≥ –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤
COMMAND=${1:-"help"}
DOMAIN=${2:-"your_domain"}
EMAIL=${3:-"your_mail"}
SSL_DIR="./ssl"
DATA_DIR="./data"
CONFIG_DIR="./config"
CONTAINER_NAME="gophish-ssl"

# –¶–≤–µ—Ç–∞ –¥–ª—è –≤—ã–≤–æ–¥–∞
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m'

log_info() {
    echo -e "${GREEN}[INFO]${NC} $1"
}

log_warn() {
    echo -e "${YELLOW}[WARN]${NC} $1"
}

log_error() {
    echo -e "${RED}[ERROR]${NC} $1"
}

log_debug() {
    echo -e "${BLUE}[DEBUG]${NC} $1"
}

show_help() {
    echo "GoPhish SSL Certificate Manager v3.1"
    echo ""
    echo "–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: $0 [COMMAND] [DOMAIN] [EMAIL]"
    echo ""
    echo "–ö–æ–º–∞–Ω–¥—ã:"
    echo "  setup         - –£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –≤—Å–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ (Docker, Certbot)"
    echo "  obtain-admin  - –ü–æ–ª—É—á–∏—Ç—å SSL —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç –¥–ª—è –∞–¥–º–∏–Ω –ø–∞–Ω–µ–ª–∏ (–ø–æ—Ä—Ç 3333)"
    echo "  obtain-phish  - –ü–æ–ª—É—á–∏—Ç—å SSL —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç –¥–ª—è —Ñ–∏—à —Å–µ—Ä–≤–µ—Ä–∞ (–ø–æ—Ä—Ç 443)"
    echo "  renew-admin   - –û–±–Ω–æ–≤–∏—Ç—å —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç –∞–¥–º–∏–Ω –ø–∞–Ω–µ–ª–∏"
    echo "  renew-phish   - –û–±–Ω–æ–≤–∏—Ç—å —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç —Ñ–∏—à —Å–µ—Ä–≤–µ—Ä–∞"
    echo "  renew-all     - –û–±–Ω–æ–≤–∏—Ç—å –≤—Å–µ —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç—ã"
    echo "  check-admin   - –ü—Ä–æ–≤–µ—Ä–∏—Ç—å —Å—Ç–∞—Ç—É—Å —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç–∞ –∞–¥–º–∏–Ω–∫–∏"
    echo "  check-phish   - –ü—Ä–æ–≤–µ—Ä–∏—Ç—å —Å—Ç–∞—Ç—É—Å —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç–∞ —Ñ–∏—à —Å–µ—Ä–≤–µ—Ä–∞"
    echo "  restart       - –ü–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç—å GoPhish –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä"
    echo "  deploy        - –ü–æ–ª–Ω—ã–π –¥–µ–ø–ª–æ–π (pull + up)"
    echo "  logs          - –ü–æ–∫–∞–∑–∞—Ç—å –ª–æ–≥–∏ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞"
    echo "  status        - –ü–æ–∫–∞–∑–∞—Ç—å —Å—Ç–∞—Ç—É—Å —Å–µ—Ä–≤–∏—Å–æ–≤"
    echo "  help          - –ü–æ–∫–∞–∑–∞—Ç—å —ç—Ç—É —Å–ø—Ä–∞–≤–∫—É"
    echo ""
    echo "–ü—Ä–∏–º–µ—Ä—ã:"
    echo "  $0 setup                                                    # –£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏"
    echo "  $0 obtain-admin admin.example.com admin@example.com        # SSL –¥–ª—è –∞–¥–º–∏–Ω–∫–∏"
    echo "  $0 obtain-phish phish.example.com admin@example.com        # SSL –¥–ª—è —Ñ–∏—à–∏–Ω–≥–∞"
    echo "  $0 deploy                                                   # –ó–∞–ø—É—Å—Ç–∏—Ç—å –≤—Å—ë"
    echo "  $0 status                                                   # –ü—Ä–æ–≤–µ—Ä–∏—Ç—å —Å—Ç–∞—Ç—É—Å"
    echo ""
    echo "–ê—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–∞:"
    echo "  üîê Admin Panel: https://admin.example.com:3333 (Let's Encrypt SSL)"
    echo "  üéØ Phish Server: https://phish.example.com:443 (Let's Encrypt SSL)"
    echo "  üìù HTTP Redirect: http://phish.example.com:80 ‚Üí HTTPS"
}

setup_dependencies() {
    log_info "–£—Å—Ç–∞–Ω–æ–≤–∫–∞ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã—Ö –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π..."
    
    # –û–±–Ω–æ–≤–ª—è–µ–º –ø–∞–∫–µ—Ç—ã
    apt update
    
    # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º Docker
    if ! command -v docker &> /dev/null; then
        log_info "–£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º Docker..."
        apt install -y docker.io
        systemctl start docker
        systemctl enable docker
        log_info "Docker —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –∏ –∑–∞–ø—É—â–µ–Ω!"
    else
        log_info "Docker —É–∂–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω"
    fi
    
    # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º Docker Compose
    if ! command -v docker-compose &> /dev/null; then
        log_info "–£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º Docker Compose..."
        apt install -y docker-compose
        log_info "Docker Compose —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω!"
    else
        log_info "Docker Compose —É–∂–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω"
    fi
    
    # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º Certbot
    if ! command -v certbot &> /dev/null; then
        log_info "–£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º Certbot..."
        apt install -y certbot
        log_info "Certbot —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω!"
    else
        log_info "Certbot —É–∂–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω"
    fi
    
    # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ —É—Ç–∏–ª–∏—Ç—ã
    apt install -y curl git openssl
    
    log_info "–í—Å–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã!"
}

check_prerequisites() {
    if ! command -v docker &> /dev/null; then
        log_error "Docker –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω! –ó–∞–ø—É—Å—Ç–∏—Ç–µ: $0 setup"
        exit 1
    fi

    if ! command -v certbot &> /dev/null; then
        log_error "Certbot –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω! –ó–∞–ø—É—Å—Ç–∏—Ç–µ: $0 setup"
        exit 1
    fi
}

validate_params() {
    if [ "$DOMAIN" = "your_domain" ] || [ "$EMAIL" = "your_mail" ]; then
        log_error "–ù–µ —É–∫–∞–∑–∞–Ω –¥–æ–º–µ–Ω –∏–ª–∏ email!"
        log_error "–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: $0 $COMMAND DOMAIN EMAIL"
        log_error "–ü—Ä–∏–º–µ—Ä: $0 $COMMAND admin.example.com admin@example.com"
        exit 1
    fi
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –≤–∞–ª–∏–¥–Ω–æ—Å—Ç—å email
    if ! [[ "$EMAIL" =~ ^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\.[a-zA-Z]{2,}$ ]]; then
        log_error "–ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç email: $EMAIL"
        exit 1
    fi
}

stop_container() {
    if docker ps -q -f name=${CONTAINER_NAME} | grep -q .; then
        log_info "–û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä GoPhish..."
        docker-compose down || true
    fi
}

start_container() {
    log_info "–ó–∞–ø—É—Å–∫–∞–µ–º –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä GoPhish..."
    docker-compose up -d
}

obtain_admin_certificate() {
    log_info "–ü–æ–ª—É—á–µ–Ω–∏–µ SSL —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç–∞ –¥–ª—è –ê–î–ú–ò–ù –ü–ê–ù–ï–õ–ò"
    log_info "–î–æ–º–µ–Ω: $DOMAIN (–±—É–¥–µ—Ç –¥–æ—Å—Ç—É–ø–µ–Ω –Ω–∞ –ø–æ—Ä—Ç—É 3333)"
    log_info "Email –¥–ª—è —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π: $EMAIL"
    
    validate_params
    
    # –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä –µ—Å–ª–∏ –∑–∞–ø—É—â–µ–Ω
    stop_container
    
    # –ü–æ–ª—É—á–∞–µ–º —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç
    certbot certonly --standalone \
        -d "$DOMAIN" \
        --non-interactive \
        --agree-tos \
        --email "$EMAIL" \
        --force-renewal
    
    # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç—ã –¥–ª—è –∞–¥–º–∏–Ω–∫–∏
    install_admin_certificates
    
    # –û–±–Ω–æ–≤–ª—è–µ–º –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é
    update_config
    
    # –ó–∞–ø—É—Å–∫–∞–µ–º –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä
    start_container
    
    log_info "SSL —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç –¥–ª—è –∞–¥–º–∏–Ω –ø–∞–Ω–µ–ª–∏ —É—Å–ø–µ—à–Ω–æ –ø–æ–ª—É—á–µ–Ω –∏ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω!"
    log_info "Admin Panel: https://$DOMAIN:3333"
}

obtain_phish_certificate() {
    log_info "–ü–æ–ª—É—á–µ–Ω–∏–µ SSL —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç–∞ –¥–ª—è –§–ò–® –°–ï–†–í–ï–†–ê"
    log_info "–î–æ–º–µ–Ω: $DOMAIN (–±—É–¥–µ—Ç –¥–æ—Å—Ç—É–ø–µ–Ω –Ω–∞ –ø–æ—Ä—Ç—É 443)"
    log_info "Email –¥–ª—è —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π: $EMAIL"
    
    validate_params
    
    # –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä –µ—Å–ª–∏ –∑–∞–ø—É—â–µ–Ω
    stop_container
    
    # –ü–æ–ª—É—á–∞–µ–º —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç
    certbot certonly --standalone \
        -d "$DOMAIN" \
        --non-interactive \
        --agree-tos \
        --email "$EMAIL" \
        --force-renewal
    
    # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç—ã –¥–ª—è —Ñ–∏—à —Å–µ—Ä–≤–µ—Ä–∞
    install_phish_certificates
    
    # –û–±–Ω–æ–≤–ª—è–µ–º –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é
    update_config
    
    # –ó–∞–ø—É—Å–∫–∞–µ–º –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä
    start_container
    
    log_info "SSL —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç –¥–ª—è —Ñ–∏—à —Å–µ—Ä–≤–µ—Ä–∞ —É—Å–ø–µ—à–Ω–æ –ø–æ–ª—É—á–µ–Ω –∏ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω!"
    log_info "Phish Server: https://$DOMAIN:443"
}

install_admin_certificates() {
    log_info "–£—Å—Ç–∞–Ω–æ–≤–∫–∞ SSL —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç–æ–≤ –¥–ª—è –∞–¥–º–∏–Ω –ø–∞–Ω–µ–ª–∏..."
    
    mkdir -p "$SSL_DIR"
    
    if [ -f "/etc/letsencrypt/live/$DOMAIN/fullchain.pem" ]; then
        cp "/etc/letsencrypt/live/$DOMAIN/fullchain.pem" "$SSL_DIR/gophish_admin.crt"
        cp "/etc/letsencrypt/live/$DOMAIN/privkey.pem" "$SSL_DIR/gophish_admin.key"
        
        # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –ø—Ä–∞–≤–∏–ª—å–Ω—ã–µ –ø—Ä–∞–≤–∞ –¥–æ—Å—Ç—É–ø–∞
        chmod 644 "$SSL_DIR/gophish_admin.crt"
        chmod 600 "$SSL_DIR/gophish_admin.key"
        
        log_info "SSL —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç—ã –∞–¥–º–∏–Ω –ø–∞–Ω–µ–ª–∏ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã –≤ $SSL_DIR/"
    else
        log_error "SSL —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç –Ω–µ –Ω–∞–π–¥–µ–Ω –¥–ª—è –¥–æ–º–µ–Ω–∞ $DOMAIN"
        exit 1
    fi
}

install_phish_certificates() {
    log_info "–£—Å—Ç–∞–Ω–æ–≤–∫–∞ SSL —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç–æ–≤ –¥–ª—è —Ñ–∏—à —Å–µ—Ä–≤–µ—Ä–∞..."
    
    mkdir -p "$SSL_DIR"
    
    if [ -f "/etc/letsencrypt/live/$DOMAIN/fullchain.pem" ]; then
        cp "/etc/letsencrypt/live/$DOMAIN/fullchain.pem" "$SSL_DIR/letsencrypt.crt"
        cp "/etc/letsencrypt/live/$DOMAIN/privkey.pem" "$SSL_DIR/letsencrypt.key"
        
        # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –ø—Ä–∞–≤–∏–ª—å–Ω—ã–µ –ø—Ä–∞–≤–∞ –¥–æ—Å—Ç—É–ø–∞
        chmod 644 "$SSL_DIR/letsencrypt.crt"
        chmod 600 "$SSL_DIR/letsencrypt.key"
        
        log_info "SSL —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç—ã —Ñ–∏—à —Å–µ—Ä–≤–µ—Ä–∞ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã –≤ $SSL_DIR/"
    else
        log_error "SSL —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç –Ω–µ –Ω–∞–π–¥–µ–Ω –¥–ª—è –¥–æ–º–µ–Ω–∞ $DOMAIN"
        exit 1
    fi
}

create_self_signed_certificates() {
    log_info "–°–æ–∑–¥–∞–Ω–∏–µ —Å–∞–º–æ–ø–æ–¥–ø–∏—Å–∞–Ω–Ω—ã—Ö —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç–æ–≤ –¥–ª—è —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏..."
    
    mkdir -p "$SSL_DIR"
    
    # –°–æ–∑–¥–∞–µ–º —Å–∞–º–æ–ø–æ–¥–ø–∏—Å–∞–Ω–Ω—ã–π —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç –¥–ª—è –∞–¥–º–∏–Ω–∫–∏ –µ—Å–ª–∏ –Ω–µ—Ç Let's Encrypt
    if [ ! -f "$SSL_DIR/gophish_admin.crt" ]; then
        log_info "–°–æ–∑–¥–∞–Ω–∏–µ —Å–∞–º–æ–ø–æ–¥–ø–∏—Å–∞–Ω–Ω–æ–≥–æ —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç–∞ –¥–ª—è –∞–¥–º–∏–Ω–∫–∏..."
        openssl req -newkey rsa:2048 -nodes -keyout "$SSL_DIR/gophish_admin.key" \
            -x509 -days 365 -out "$SSL_DIR/gophish_admin.crt" \
            -subj "/C=US/ST=State/L=City/O=GoPhish/CN=gophish-admin"
        chmod 600 "$SSL_DIR/gophish_admin.key"
        chmod 644 "$SSL_DIR/gophish_admin.crt"
    fi
    
    # –°–æ–∑–¥–∞–µ–º —Å–∞–º–æ–ø–æ–¥–ø–∏—Å–∞–Ω–Ω—ã–π —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç –¥–ª—è —Ñ–∏—à —Å–µ—Ä–≤–µ—Ä–∞ –µ—Å–ª–∏ –Ω–µ—Ç Let's Encrypt
    if [ ! -f "$SSL_DIR/letsencrypt.crt" ]; then
        log_info "–°–æ–∑–¥–∞–Ω–∏–µ —Å–∞–º–æ–ø–æ–¥–ø–∏—Å–∞–Ω–Ω–æ–≥–æ —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç–∞ –¥–ª—è —Ñ–∏—à —Å–µ—Ä–≤–µ—Ä–∞..."
        openssl req -newkey rsa:2048 -nodes -keyout "$SSL_DIR/letsencrypt.key" \
            -x509 -days 365 -out "$SSL_DIR/letsencrypt.crt" \
            -subj "/C=US/ST=State/L=City/O=Organization/CN=localhost"
        chmod 600 "$SSL_DIR/letsencrypt.key"
        chmod 644 "$SSL_DIR/letsencrypt.crt"
    fi
}

update_config() {
    log_info "–û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ GoPhish..."
    
    mkdir -p "$CONFIG_DIR"
    
    cat > "$CONFIG_DIR/config.json" << CONFIG_EOF
{
  "admin_server": {
    "listen_url": "0.0.0.0:3333",
    "use_tls": true,
    "cert_path": "ssl/gophish_admin.crt",
    "key_path": "ssl/gophish_admin.key"
  },
  "phish_server": {
    "listen_url": "0.0.0.0:443",
    "use_tls": true,
    "cert_path": "ssl/letsencrypt.crt",
    "key_path": "ssl/letsencrypt.key"
  },
  "db_name": "sqlite3",
  "db_path": "gophish.db",
  "migrations_prefix": "db/db_",
  "contact_address": "",
  "logging": {
    "filename": "",
    "level": ""
  }
}
CONFIG_EOF

    log_info "–ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –æ–±–Ω–æ–≤–ª–µ–Ω–∞!"
}

renew_admin_certificate() {
    log_info "–û–±–Ω–æ–≤–ª–µ–Ω–∏–µ SSL —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç–∞ –¥–ª—è –∞–¥–º–∏–Ω –ø–∞–Ω–µ–ª–∏..."
    
    if [ "$DOMAIN" = "your_domain" ]; then
        log_error "–ù—É–∂–Ω–æ —É–∫–∞–∑–∞—Ç—å –¥–æ–º–µ–Ω –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è!"
        log_error "–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: $0 renew-admin DOMAIN"
        exit 1
    fi
    
    stop_container
    
    certbot renew --force-renewal --cert-name "$DOMAIN"
    
    install_admin_certificates
    update_config
    start_container
    
    log_info "SSL —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç –∞–¥–º–∏–Ω –ø–∞–Ω–µ–ª–∏ —É—Å–ø–µ—à–Ω–æ –æ–±–Ω–æ–≤–ª–µ–Ω!"
}

renew_phish_certificate() {
    log_info "–û–±–Ω–æ–≤–ª–µ–Ω–∏–µ SSL —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç–∞ –¥–ª—è —Ñ–∏—à —Å–µ—Ä–≤–µ—Ä–∞..."
    
    if [ "$DOMAIN" = "your_domain" ]; then
        log_error "–ù—É–∂–Ω–æ —É–∫–∞–∑–∞—Ç—å –¥–æ–º–µ–Ω –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è!"
        log_error "–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: $0 renew-phish DOMAIN"
        exit 1
    fi
    
    stop_container
    
    certbot renew --force-renewal --cert-name "$DOMAIN"
    
    install_phish_certificates
    update_config
    start_container
    
    log_info "SSL —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç —Ñ–∏—à —Å–µ—Ä–≤–µ—Ä–∞ —É—Å–ø–µ—à–Ω–æ –æ–±–Ω–æ–≤–ª–µ–Ω!"
}

renew_all_certificates() {
    log_info "–û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –≤—Å–µ—Ö SSL —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç–æ–≤..."
    
    stop_container
    
    certbot renew --force-renewal
    
    # –ü–æ–ø—Ä–æ–±—É–µ–º –Ω–∞–π—Ç–∏ –∏ —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –≤—Å–µ –¥–æ—Å—Ç—É–ø–Ω—ã–µ —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç—ã
    if ls /etc/letsencrypt/live/*/fullchain.pem 1> /dev/null 2>&1; then
        for cert_dir in /etc/letsencrypt/live/*/; do
            domain_name=$(basename "$cert_dir")
            if [ "$domain_name" != "*" ]; then
                log_info "–ù–∞–π–¥–µ–Ω —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç –¥–ª—è –¥–æ–º–µ–Ω–∞: $domain_name"
                DOMAIN="$domain_name"
                
                # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∫–∞–∫ admin (–º–æ–∂–Ω–æ –∏–∑–º–µ–Ω–∏—Ç—å –ª–æ–≥–∏–∫—É)
                install_admin_certificates
            fi
        done
    fi
    
    update_config
    start_container
    
    log_info "–í—Å–µ SSL —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç—ã –æ–±–Ω–æ–≤–ª–µ–Ω—ã!"
}

check_certificate() {
    local cert_type=$1
    local cert_file=""
    
    case $cert_type in
        "admin")
            cert_file="$SSL_DIR/gophish_admin.crt"
            log_info "–ü—Ä–æ–≤–µ—Ä–∫–∞ SSL —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç–∞ –ê–î–ú–ò–ù –ü–ê–ù–ï–õ–ò"
            ;;
        "phish")
            cert_file="$SSL_DIR/letsencrypt.crt"
            log_info "–ü—Ä–æ–≤–µ—Ä–∫–∞ SSL —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç–∞ –§–òÿ¥ –°–ï–†–í–ï–†–ê"
            ;;
        *)
            log_error "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π —Ç–∏–ø —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç–∞: $cert_type"
            exit 1
            ;;
    esac
    
    if [ -f "$cert_file" ]; then
        echo "=== –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç–µ ==="
        openssl x509 -in "$cert_file" -noout -subject -issuer -dates
        echo ""
        
        # –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ä–æ–∫–∞ –¥–µ–π—Å—Ç–≤–∏—è
        expiry_date=$(openssl x509 -in "$cert_file" -noout -enddate | cut -d= -f2)
        expiry_timestamp=$(date -d "$expiry_date" +%s)
        current_timestamp=$(date +%s)
        days_left=$(( (expiry_timestamp - current_timestamp) / 86400 ))
        
        echo "–î–Ω–µ–π –¥–æ –∏—Å—Ç–µ—á–µ–Ω–∏—è: $days_left"
        
        if [ $days_left -lt 30 ]; then
            log_warn "–°–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç –∏—Å—Ç–µ–∫–∞–µ—Ç –º–µ–Ω–µ–µ —á–µ–º —á–µ—Ä–µ–∑ 30 –¥–Ω–µ–π! –†–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ."
        else
            log_info "–°–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª–µ–Ω."
        fi
    else
        log_error "–°–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç –Ω–µ –Ω–∞–π–¥–µ–Ω: $cert_file"
        exit 1
    fi
}

restart_container() {
    log_info "–ü–µ—Ä–µ–∑–∞–ø—É—Å–∫ GoPhish –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞..."
    docker-compose restart
    log_info "–ö–æ–Ω—Ç–µ–π–Ω–µ—Ä –ø–µ—Ä–µ–∑–∞–ø—É—â–µ–Ω!"
}

show_logs() {
    log_info "–ü–æ–∫–∞–∑ –ª–æ–≥–æ–≤ GoPhish..."
    docker-compose logs -f --tail=50
}

show_status() {
    log_info "–°—Ç–∞—Ç—É—Å —Å–µ—Ä–≤–∏—Å–æ–≤ GoPhish:"
    echo ""
    
    # Docker Compose —Å—Ç–∞—Ç—É—Å
    docker-compose ps
    echo ""
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ—Ä—Ç–æ–≤
    log_info "–ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ—Ä—Ç–æ–≤:"
    if ss -tlnp | grep -q ":3333"; then
        echo "‚úÖ –ü–æ—Ä—Ç 3333 (Admin HTTPS) - –∞–∫—Ç–∏–≤–µ–Ω"
    else
        echo "‚ùå –ü–æ—Ä—Ç 3333 (Admin HTTPS) - –Ω–µ –∞–∫—Ç–∏–≤–µ–Ω"
    fi
    
    if ss -tlnp | grep -q ":443"; then
        echo "‚úÖ –ü–æ—Ä—Ç 443 (Phishing HTTPS) - –∞–∫—Ç–∏–≤–µ–Ω"
    else
        echo "‚ùå –ü–æ—Ä—Ç 443 (Phishing HTTPS) - –Ω–µ –∞–∫—Ç–∏–≤–µ–Ω"
    fi
    
    if ss -tlnp | grep -q ":80"; then
        echo "‚úÖ –ü–æ—Ä—Ç 80 (HTTP Redirect) - –∞–∫—Ç–∏–≤–µ–Ω"
    else
        echo "‚ùå –ü–æ—Ä—Ç 80 (HTTP Redirect) - –Ω–µ –∞–∫—Ç–∏–≤–µ–Ω"
    fi
    
    echo ""
    log_info "SSL Certificates:"
    if [ -f "$SSL_DIR/gophish_admin.crt" ]; then
        echo "‚úÖ Admin SSL Certificate - —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω"
    else
        echo "‚ùå Admin SSL Certificate - –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç"
    fi
    
    if [ -f "$SSL_DIR/letsencrypt.crt" ]; then
        echo "‚úÖ Phish SSL Certificate - —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω"
    else
        echo "‚ùå Phish SSL Certificate - –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç"
    fi
    
    echo ""
    log_info "URLs:"
    echo "üîê Admin panel: https://your-admin-domain.com:3333"
    echo "üéØ Phishing server: https://your-phish-domain.com:443"
    echo "üìù Default login: admin / gophish"
}

deploy_all() {
    log_info "–ü–æ–ª–Ω—ã–π –¥–µ–ø–ª–æ–π GoPhish SSL..."
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏
    check_prerequisites
    
    # –°–æ–∑–¥–∞—ë–º –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏
    mkdir -p "$SSL_DIR" "$DATA_DIR" "$CONFIG_DIR"
    
    # –°–æ–∑–¥–∞–µ–º —Å–∞–º–æ–ø–æ–¥–ø–∏—Å–∞–Ω–Ω—ã–µ —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç—ã –¥–ª—è –Ω–∞—á–∞–ª–∞
    create_self_signed_certificates
    
    # –û–±–Ω–æ–≤–ª—è–µ–º –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é
    update_config
    
    # –ó–∞–ø—É—Å–∫–∞–µ–º
    start_container
    
    # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Å—Ç–∞—Ç—É—Å
    sleep 5
    show_status
    
    log_info "–î–µ–ø–ª–æ–π –∑–∞–≤–µ—Ä—à—ë–Ω!"
    log_warn "–î–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è Let's Encrypt —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç–æ–≤ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ:"
    log_warn "  $0 obtain-admin your-admin-domain.com your-email@example.com"
    log_warn "  $0 obtain-phish your-phish-domain.com your-email@example.com"
}

# –ì–ª–∞–≤–Ω–∞—è –ª–æ–≥–∏–∫–∞
case "$COMMAND" in
    "setup")
        setup_dependencies
        ;;
    "obtain-admin")
        check_prerequisites
        obtain_admin_certificate
        ;;
    "obtain-phish")
        check_prerequisites
        obtain_phish_certificate
        ;;
    "renew-admin")
        check_prerequisites
        renew_admin_certificate
        ;;
    "renew-phish")
        check_prerequisites
        renew_phish_certificate
        ;;
    "renew-all")
        check_prerequisites
        renew_all_certificates
        ;;
    "check-admin")
        check_certificate "admin"
        ;;
    "check-phish")
        check_certificate "phish"
        ;;
    "restart")
        restart_container
        ;;
    "deploy")
        deploy_all
        ;;
    "logs")
        show_logs
        ;;
    "status")
        show_status
        ;;
    "help"|*)
        show_help
        ;;
esac
